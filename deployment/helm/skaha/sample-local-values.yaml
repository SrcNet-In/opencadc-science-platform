# Sample Local install values file.

# Skaha web service deployment
deployment:
  hostname: canfar.e4r.internal
  skaha:
    image: images.opencadc.org/platform/skaha:0.16.1
    imagePullPolicy: IfNotPresent
    # Space delimited list of allowed Image Registry hosts.  These hosts should match the hosts in the User Session images.
    registryHosts: "images.canfar.net"
    maxUserSessions: "5"

    # Root of shared storage
    skahaTld: "/arc"

    # The group name to verify users against for permission to use the Science Platform.
    usersGroup: "ivo://skao.int/gms?prototyping-groups/mini-src/platform-users"
    # usersGroup: "ivo://cadc.nrc.ca/gms?skaha-users"

    adminsGroup: "ivo://cadc.nrc.ca/gms?skaha-admins"

    # The Resource ID of the Service that contains the Posix Mapping information
    posixMapperResourceID: "ivo://opencadc.org/posix-mapper"
    registryURL: http://reg.skaha-system.svc.cluster.local/reg

    # Optionally set the DEBUG port.
    # extraEnv:
    # - name: CATALINA_OPTS
    #   value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555"
    # - name: JAVA_OPTS
    #   value: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5555"

    # Resources provided to the Skaha service.
    resources:
      requests:
        memory: "500M"
        cpu: "500m"
      limits:
        memory: "1500M"
        cpu: "1500m"

    # Uncomment to debug.  Requires options above as well as service port exposure below.
    # extraPorts:
    # - containerPort: 5555
    #   protocol: TCP

    # Optionally mount a custom CA certificate
    extraVolumeMounts:
     - mountPath: "/config/cacerts"
       name: cacert-volume

    # If the base names have changed, then change them here, otherwise leave them.
    priorityClassName: uber-user-preempt-high
    serviceAccountName: skaha

    # Create the CA certificate volume to be mounted in extraVolumeMounts
    extraVolumes:
     - name: cacert-volume
       secret:
         defaultMode: 420
         secretName: science-portal-cacert-secret

secrets:
  # Uncomment to enable local or self-signed CA certificates for your domain to be trusted.
  # skaha-cacert-secret:
  #   ca.crt: <base64 encoded CA crt>

# Exposed extra ports.  Uncomment the java-debug port to expose and debug issues.
# service:
#   extraPorts:
  # - port: 5555
  #   protocol: TCP
  #   name: java-debug

# Set these labels appropriately to match your Persistent Volume labels.
# The storage.service.spec can be anything that supports ACLs, such as CephFS or Local.
# The CephFS Volume can be dynamically allocated here for the storage.service.spec:
# Example:
# storage:
#   service:
#     spec:
#       cephfs:
#         mons:
#           ...
# Default is a PersistentVolumeClaim to the Local Storage.
storage:
  service:
    spec:
      persistentVolumeClaim:
        claimName: skaha-pvc # Match this label up with whatever was installed in the base install, or the desired PVC, or create dynamically provisioned storage.
  sessions:
    claim:
      # storageClassName: ""
      labels:
        storage: local-storage  # Match this label up with whatever was installed in the base install, or the desired PVC

# Kueue setups
resourceFlavors:
  skaha-interactive:
    nodeLabels:
      node-role.kubernetes.io/interactive-worker: "true"
  skaha-headless:
    nodeLabels:
      node-role.kubernetes.io/headless-worker: "true"

localQueues:
  skaha-workload-queue-interactive:
    namespace: skaha-workload
    clusterQueue: skaha-cluster-queue-interactive
  skaha-workload-queue-headless:
    namespace: skaha-workload
    clusterQueue: skaha-cluster-queue-headless

clusterQueues:
  skaha-cluster-queue-interactive:
    cohort: "skaha-queue"
    resourceGroups:
    - coveredResources: ["cpu", "memory", "ephemeral-storage"]
      flavors:
      - name: skaha-interactive
        resources:
        - name: cpu
          nominalQuota: 30
        - name: memory
          nominalQuota: 30Gi
        - name: ephemeral-storage
          nominalQuota: 300Gi
      - name: skaha-headless
        resources:
        - name: cpu
          nominalQuota: 0
          borrowingLimit: 2
        - name: memory
          nominalQuota: 0Gi
          borrowingLimit: 2Gi
        - name: ephemeral-storage
          nominalQuota: 0Gi
  skaha-cluster-queue-headless:
    cohort: "skaha-queue"
    resourceGroups:
    - coveredResources: ["cpu", "memory", "ephemeral-storage"]
      flavors:
      - name: skaha-headless
        resources:
        - name: cpu
          nominalQuota: 4
          lendingLimit: 2
        - name: memory
          nominalQuota: 4Gi
          lendingLimit: 2Gi
        - name: ephemeral-storage
          nominalQuota: 50Gi

